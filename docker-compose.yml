version: '3.8'

services:
  gateway:
    build:
      context: .
      dockerfile: ./apps/gateway/Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      payment:
        condition: service_started
      appointment:
        condition: service_started
      shop:
        condition: service_started
    networks:
      - app-network

  payment:
    build:
      context: .
      dockerfile: ./apps/payment/Dockerfile
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgres://user:password@localhost:5432/paymentdb
      - RABBITMQ_URL=amqp://rabbitmq:5672
    networks:
      - app-network

  appointment:
    build:
      context: .
      dockerfile: ./apps/appointment/Dockerfile
    ports:
      - "3002:3002"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgres://user:password@localhost:5432/appointmentdb
      - RABBITMQ_URL=amqp://rabbitmq:5672
    networks:
      - app-network

  shop:
    build:
      context: .
      dockerfile: ./apps/shop/Dockerfile
    ports:
      - "3003:3003"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgres://user:password@localhost:5432/shopdb
      - RABBITMQ_URL=amqp://rabbitmq:5672
    networks:
      - app-network

  postgres:
    image: postgres:13
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_MULTIPLE_DATABASES: paymentdb,appointmentdb,shopdb
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-multiple-databases.sh:/docker-entrypoint-initdb.d/init-multiple-databases.sh
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: adminpassword
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - app-network
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - app-network

  grafana:
    image: grafana/grafana
    ports:
      - "3100:3000"
    depends_on:
      - prometheus
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
